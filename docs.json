[{"name":"Generator","comment":"\n\n\n# Generator\n\n@docs Generator\n\n\n# Source Generators\n\n@docs fromList, once, numFrom\n\n\n# Transform Generators\n\n@docs map, toTuple, fromTuple, groupBy, split\n\n\n## Filter\n\n@docs filter, filterMap\n\n\n# Compose Generators\n\n@docs pipe, pipeTo\n\n\n# Read data\n\n@docs peek, step, collect\n\n","unions":[{"name":"Generator","comment":"\n\n    numbers : Int -> Generator Never Int\n    numbers n =\n        Yield n (\\_ -> number (n + 1))\n\n","args":["input","output"],"cases":[["Yield",["output","() -> Generator.Generator input output"]],["Step",["input -> Generator.Generator input output"]],["Done",[]]]}],"aliases":[],"values":[{"name":"collect","comment":" ","type":"Basics.Int -> Generator.Generator Basics.Never a -> List.List a"},{"name":"filter","comment":" ","type":"(a -> Basics.Bool) -> Generator.Generator a a"},{"name":"filterMap","comment":" ","type":"(a -> Maybe.Maybe b) -> Generator.Generator a b"},{"name":"fromList","comment":" ","type":"List.List a -> Generator.Generator Basics.Never a"},{"name":"fromTuple","comment":" ","type":"Generator.Generator ( a, a ) a"},{"name":"groupBy","comment":" ","type":"Basics.Int -> Generator.Generator a (List.List a)"},{"name":"map","comment":" ","type":"(a -> b) -> Generator.Generator a b"},{"name":"numFrom","comment":" ","type":"Basics.Int -> Generator.Generator Basics.Never Basics.Int"},{"name":"once","comment":" ","type":"a -> Generator.Generator Basics.Never a"},{"name":"peek","comment":" ","type":"Generator.Generator Basics.Never a -> Maybe.Maybe a"},{"name":"pipe","comment":" ","type":"Generator.Generator input a -> Generator.Generator a output -> Generator.Generator input output"},{"name":"pipeTo","comment":" ","type":"Generator.Generator a output -> Generator.Generator input a -> Generator.Generator input output"},{"name":"split","comment":" ","type":"Generator.Generator (List.List a) a"},{"name":"step","comment":" ","type":"Generator.Generator Basics.Never a -> ( Maybe.Maybe a, Generator.Generator Basics.Never a )"},{"name":"toTuple","comment":" ","type":"Generator.Generator a ( a, a )"}],"binops":[]}]